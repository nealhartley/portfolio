/*
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
*/
/* 
    Created on : 9/01/2019, 2:13:45 PM
    Author     : Dev
*/

@import "_constants.scss"; 

html{
    background: linear-gradient(to bottom, $home-bg-blue 60%, #ff99cc 200%);
    
    overflow: hidden;
    height: 100%;
}

body{
    color:white;
    text-align: center;
}

.centered_content{
    padding-top: calc(50vh - 200px);
    height:400px;
}

.morph_text_container{
    font-weight: 200;
    margin-bottom: 20px;
    

}



.buttons{
    display:inline-flex;
}



.morphing_picture{
   
    margin:auto;
    width: 100px;
    height: 100px;
    margin-top: 20px;
    background-color: #359aff; 
    transition: 0.2s cubic-bezier(1, -1, 0, 2);
    clip-path: polygon(50% 0%, 65% 15%, 75% 25%, 90% 40%, 100% 50%, 90% 60%, 75% 75%, 65% 85%, 50% 100%, 35% 85%, 10% 60%, 0 50% ,10% 40% ,20% 30%, 35% 15%);
}

.computer:hover ~ .morphing_picture{
    clip-path: polygon(50% 5%, 95% 10%, 95% 60%, 60% 60%, 60% 70%, 75% 75%, 95% 80%, 95% 90%, 5% 90%, 5% 80%, 25% 75%, 40% 70%, 40% 60%, 5% 60%, 5% 10%);
}

.pencil:hover ~ .morphing_picture{
    clip-path: polygon(70% 10%, 75% 10%, 90% 25%, 90% 30%, 75% 45%, 65% 55%, 50% 70%, 40% 80%, 30% 90%, 5% 95%, 10% 70%, 20% 60%, 30% 50%, 50% 30%, 60% 20%);
}

.refresh:hover ~ .morphing_picture{
    clip-path: polygon(85% 15%, 85% 85%, 15% 85%, 15% 55%, 30% 55%, 30% 70%, 70% 70%, 70% 30%, 30% 30%, 30% 35%, 35% 35%, 22.5% 50%, 10% 35%, 15% 35%, 15% 15%);
}

.head:hover ~ .morphing_picture{
    //head
    //clip-path: polygon(40% 10%, 60% 10%, 80% 30%, 70% 60%, 60% 70%, 60% 75%, 75% 85%, 90% 90%, 50% 90%, 10% 90%, 25% 85%, 40% 75%, 40% 70%, 30% 60%, 20% 30%);
   
    //star
    clip-path: polygon(50% 5%, 60% 35%, 90% 35%, 65% 50%, 80% 90%, 50% 65%, 20% 90%, 35% 50%, 10% 35%, 40% 35%, 40% 35%, 40% 35%, 40% 35%, 40% 35%, 40% 35%);
    background-color: gold;
    -webkit-transition: 0.2s cubic-bezier(1, -1, 0, 2) background-color 300ms linear;
    -ms-transition: 0.2s cubic-bezier(1, -1, 0, 2) background-color 300ms linear;
    transition: 0.2s cubic-bezier(1, -1, 0, 2) background-color 300ms linear;
    
}

@keyframes shake{
    10%, 30% {
    transform: translate3d(-2px, 0, 0);
  }
  
  20%, 40% {
    transform: translate3d(2px, 0, 0);
  }
  50%{
      transform: translate3d(0, 0 ,0);
  }
}
.talents{
    display: inline-block;
    animation: shake 4s infinite;
    animation-delay: 3s;
    transform: translate3d(0, 0, 0);
    
    cursor: crosshair;
}



.talents:hover{
    animation: none;
    color: #359aff;
    
}

.talents:hover {}


@for $i from 1 through 30 {
	@keyframes particle-animation-#{$i}{
		100% {
			transform: translate3d((random(90) * 1vw), (random(90) * 1vh), (random(100) * 1px)) 
                           
		}
	}
	
	.particle:nth-child(#{$i}){
		animation: particle-animation-#{$i} 60s infinite;
		$size: random(5) + 5 + px;
		opacity: random(100)/100;
		height: $size;
		width: $size;
		animation-delay: -$i * .2s;
		transform: translate3d(((random(50) * 1vw) + 25vw), (random(90) * 1vh), (random(100) * 1px));
               
		background: hsl(random(360), 60%, 0%);
                box-shadow:0 0 30px white;
	}
}

.particle{
    position:absolute;
    border-radius: 50%
   
}


// best in chrome
$total: 30; // total particles
$orb-size: 300px;
$particle-size: 1px;
$time: 14s; 
$base-hue: 360; //


@for $i from 1 through 30 {
	@keyframes planet_particle_animation-#{$i}{
		100% {
			transform: translate3d((random(90) * 1vw), (random(90) * 1vh), (random(100) * 1px));
		}
	}
	
	.planet_particle:nth-child(#{$i}){
		animation: particle-animation-#{$i} 60s infinite;
		$size: random(5) + 5 + px;
		opacity: random(100)/100;
		height: $size;
		width: $size;
		animation-delay: -$i * .2s;
		transform: translate3d(((random(50) * 1vw) + 25vw), (random(90) * 1vh), (random(100) * 1px));
		background: hsl(random(360), 60%, 80%);
	}
}


#planet_particle_container{
    position:fixed;
    top:50vh;
    left:50vw;
    
    width:0px;
    height:0px;
    background-color: white;
    
    transform-style: preserve-3d;
    perspective: 2000px;
    animation: rotate $time infinite linear;
}

@keyframes rotate{
    100%{
        transform: rotateY(360deg) rotateX(360deg);
    }
}

.planet_particle {
   position: relative;
   width: $particle-size;
   height: $particle-size;
   border-radius: 50%;
   opacity: 0;
}

@for $i from 1 through $total {
    $z: (random(360) * 1deg); //random angle to rotateZ
    $y: (random(360) * 1deg); //random angle to rotatey
    $hue: ((40/$total * $i) + $base-hue); // set hue

    .planet_particle:nth-child(#{$i}){ // update the nth particle
       
        animation: orbit#{$i} $time infinite;
        animation-delay: ($i * .01s);
        background-color: hsla($hue, 100%, 0%, 1);
        box-shadow:0 0 20px white;
    }
    
    @keyframes orbit#{$i}{
        20%{
            opacity: 1; // fade in
        }
        30%{
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size)
                rotateZ($z); //form orb
        }
        80%{
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size)
                rotateZ($z); //hold orb shape
            opacity: 1;
        }
        100%{
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size * 3)
                rotateZ($z); //prb expands to 3* the size
            
        }
    }


}